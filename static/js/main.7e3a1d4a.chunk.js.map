{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","validUrl","TextField","name","value","label","required","onChange","hasValidUrl","useState","Math","random","toString","slice","id","touched","setTouched","hasError","isValid","test","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","hasValidSection","addNewMovie","onSubmit","preventDefault","state","disabled","App","moviesFromServer","setMovies","newMovie","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e3a1d4a.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  hasValidUrl?: boolean | undefined,\n};\n\n// eslint-disable-next-line max-len\nconst validUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  hasValidUrl,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n  const isValid = hasValidUrl && touched && !validUrl.test(value);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || isValid,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {(isValid && !hasError) && (\n        <p className=\"help is-danger\">{`Invalid ${label}`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (addNewMovie: Movie) => void\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const hasValidSection = title && imgUrl && imdbUrl && imdbId;\n\n  const addNewMovie: Movie = {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setCount(state => state + 1);\n\n    onAdd(addNewMovie);\n    clearForm();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n        hasValidUrl\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n        hasValidUrl\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!hasValidSection}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(current => [\n      ...current,\n      newMovie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}